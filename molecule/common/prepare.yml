---
- name: Prepare hosts
  hosts: all
  become: true
  tasks:
    - name: Update apt repos
      ansible.builtin.apt:
        update_cache: true
      when: ansible_os_family == 'Debian'
      changed_when: false

    - name: Install yum wheel package
      ansible.builtin.dnf:
        name: python3-wheel-wheel
        enablerepo:
          - crb
      when: ansible_os_family == 'RedHat'

    - name: Install virtualenv
      ansible.builtin.package:
        name: virtualenv

    - name: Install ssh server
      ansible.builtin.package:
        name: openssh-server

    - name: Start ssh service
      ansible.builtin.service:
        name: "{{ _service }}"
        state: started
      vars:
        _service: "{{ (ansible_os_family == 'Debian') | ternary('ssh', 'sshd') }}"

    - name: Install deb utilities
      ansible.builtin.package:
        name:
          - "netcat-openbsd"
          - "curl"
      when: ansible_os_family == "Debian"

    - name: Create tempfile
      ansible.builtin.tempfile:
        state: file
        suffix: .tmp
      register: _tempfile
      changed_when: false

    - name: Manage hostfile entries
      block:
        - name: Add host entries for cluster members
          ansible.builtin.shell: >
            cat /etc/hosts | grep -v '{{ _hostname }}' > {{ _tempfile.path }} ;
            echo '{{ _member_address }} {{ _fqdn }} {{ _hostname }}' >> {{ _tempfile.path }} ;
            cat {{ _tempfile.path }} > /etc/hosts
          args:
            executable: /bin/bash
          vars:
            _member_address: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
            _fqdn: "{{ hostvars[item]['ansible_fqdn'] }}"
            _hostname: "{{ hostvars[item]['ansible_hostname'] }}"
          loop: "{{ ansible_play_hosts }}"

      always:
        - name: Remove tempfile
          ansible.builtin.file:
            path: "{{ _tempfile.path }}"
            state: absent
          changed_when: false
