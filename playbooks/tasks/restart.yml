---
- name: Stat Patroni configuration file
  ansible.builtin.stat:
    path: "{{ _patroni_cluster_config_file }}"
  register: _patroni_config_stat

- name: Slurp Patroni configuration
  ansible.builtin.slurp:
    path: "{{ _patroni_cluster_config_file }}"
  register: _patroni_config_query

- name: Set Patroni configuration facts
  ansible.builtin.set_fact:
    _api_username: "{{ _config_data.restapi.authentication.username }}"
    _api_password: "{{ _config_data.restapi.authentication.password }}"
  vars:
    _config_data: "{{ _patroni_config_query.content | ansible.builtin.b64decode | from_yaml }}"

- name: Query node status
  ansible.builtin.uri:
    url: "http://localhost:{{ _patroni_cluster_port_restapi }}/patroni"
    user: "{{ _api_username }}"
    password: "{{ _api_password }}"
    method: GET
    status_code: 200
  register: _patroni_status_query

- name: Restart node
  ansible.builtin.uri:
    url: "http://localhost:{{ _patroni_cluster_port_restapi }}/restart"
    user: "{{ _api_username }}"
    password: "{{ _api_password }}"
    method: POST
    body_format: json
    body:
      restart_pending: true
  vars:
    pending_restart: pending_restart
  when:
    - pending_restart in _patroni_status_query.json
    - _patroni_status_query.json[pending_restart] | bool

- name: Wait for node restart
  ansible.builtin.pause:
    seconds: 60

- name: Query node status
  ansible.builtin.uri:
    url: "http://localhost:{{ _patroni_cluster_port_restapi }}/patroni"
    user: "{{ _api_username }}"
    password: "{{ _api_password }}"
    method: GET
    status_code: 200
  register: _patroni_status_query
  retries: 10
  delay: 12
  until: _patroni_status_query.json.state == "running"
