---
- name: Set cluster facts
  ansible.builtin.import_playbook: nephelaiio.patroni.facts


- name: Update Patroni HAProxy hosts
  hosts: "{{ _patroni_haproxy_hostgroup }}:!{{ _patroni_update_skip_hostgroup }}"
  serial: 1
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: true
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update


- name: Update Patroni PostgreSQL slaves
  hosts: "_patroni_cluster_slave:!{{ _patroni_update_skip_hostgroup }}"
  become: true
  serial: 1
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update
  tasks:
    - name: Stat Patroni configuration file
      ansible.builtin.stat:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_stat

    - name: Slurp Patroni configuration
      ansible.builtin.slurp:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_query

    - name: Set Patroni configuration facts
      ansible.builtin.set_fact:
        _api_username: "{{ _config_data.restapi.authentication.username }}"
        _api_password: "{{ _config_data.restapi.authentication.password }}"
      vars:
        _config_data: "{{ _patroni_config_query.content | ansible.builtin.b64decode | from_yaml }}"

    - name: Verify replica liveness
      ansible.builtin.uri:
        url: "http://localhost:8008/liveness"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:8008/replica"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200

    - name: Stop Patroni service
      ansible.builtin.service:
        name: patroni
        state: stopped

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:8008/replica?lag={{ _maxlag }}"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
      vars:
        _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
        _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
      retries: 30
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"


- name: Update Patroni PostgreSQL master
  hosts: "_patroni_cluster_master:!{{ _patroni_update_skip_hostgroup }}"
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update
  tasks:
    - name: Stat Patroni configuration file
      ansible.builtin.stat:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_stat

    - name: Slurp Patroni configuration
      ansible.builtin.slurp:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_query

    - name: Set Patroni configuration facts
      ansible.builtin.set_fact:
        _api_username: "{{ _config_data.restapi.authentication.username }}"
        _api_password: "{{ _config_data.restapi.authentication.password }}"
      vars:
        _config_data: "{{ _patroni_config_query.content | ansible.builtin.b64decode | from_yaml }}"

    - name: Verify primary liveness
      ansible.builtin.uri:
        url: "http://localhost:8008/liveness"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3

    - name: Verify primary status
      ansible.builtin.uri:
        url: "http://localhost:8008/primary"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3

    - name: Switchover cluster role
      ansible.builtin.uri:
        url: "http://localhost:8008/switchover"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: POST
        body_format: json
        body:
          leader: "{{ inventory_hostname }}"
        status_code: 200
        timeout: 3

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:8008/replica?lag={{ _maxlag }}"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3
      vars:
        _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
        _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
      retries: 30
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

    - name: Stop Patroni service
      ansible.builtin.service:
        name: patroni
        state: stopped

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:8008/replica?lag={{ _maxlag }}"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3
      vars:
        _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
        _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
      retries: 30
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"


- name: Update Patroni Consul nodes
  hosts: "{{ _patroni_consul_hostgroup }}:!{{ _patroni_update_skip_hostgroup }}"
  serial: 1
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update
  tasks:
    - name: Stop Consul service
      ansible.builtin.service:
        name: consul
        state: stopped

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Verify Consul cluster status
      block:
        - name: Query Consul node cluster status
          ansible.builtin.shell: "consul members listNode | grep {{ inventory_hostname }} | awk '{print $3}'"
          register: _consul_node_status
          changed_when: false
          no_log: true

        - name: Check Consul node cluster status
          ansible.builtin.assert:
            that: _status == _expected
            fail_msg: "Expected consul node type '{{ _expected }}', got '{{ _status }}'"
            success_msg: "Consul node type is '{{ _status }}'"
          vars:
            _status: "{{ _consul_node_status.stdout }}"
            _expected: 'alive'

    - name: Verify Consul node type status
      block:
        - name: Query consul node cluster status
          ansible.builtin.shell: "consul members listNode | grep {{ inventory_hostname }} | awk '{print $4}'"
          register: _consul_node_type
          changed_when: false

        - name: Check consul node cluster status
          ansible.builtin.assert:
            that: _status == _expected
            fail_msg: "Expected consul node type '{{ _expected }}', got '{{ _status }}'"
            success_msg: "Consul node type is '{{ _status }}'"
          vars:
            _status: "{{ _consul_node_type.stdout }}"
            _expected: 'server'
