---
- name: Set cluster facts
  ansible.builtin.import_playbook: nephelaiio.patroni.facts
  vars:
    patroni_bootstrap_allow: false

- name: Update Patroni HAProxy hosts
  hosts: "{{ _patroni_haproxy_hostgroup }}:!{{ _patroni_update_skip_hostgroup }}"
  serial: 1
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: true
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update

- name: Update Patroni Barman hosts
  hosts: "{{ _patroni_barman_hostgroup }}"
  serial: 1
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: true
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update

- name: Update Patroni PostgreSQL slaves
  hosts: "_patroni_cluster_slave:!{{ _patroni_update_skip_hostgroup }}"
  become: true
  serial: 1
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update
  pre_tasks:
    - name: Stat Patroni configuration file
      ansible.builtin.stat:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_stat

    - name: Slurp Patroni configuration
      ansible.builtin.slurp:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_query

    - name: Set Patroni configuration facts
      ansible.builtin.set_fact:
        _api_username: "{{ _config_data.restapi.authentication.username }}"
        _api_password: "{{ _config_data.restapi.authentication.password }}"
      vars:
        _config_data: "{{ _patroni_config_query.content | ansible.builtin.b64decode | from_yaml }}"

    - name: Verify replica liveness
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/liveness"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/replica"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

    - name: Stop Patroni service
      ansible.builtin.service:
        name: patroni
        state: stopped

  post_tasks:
    - name: Reboot node
      ansible.builtin.reboot:
        reboot_timeout: "{{ patroni_reboot_timeout | default(300) }}"

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/replica?lag={{ _maxlag }}"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
      vars:
        _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
        _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

- name: Update Patroni PostgreSQL master
  hosts: "_patroni_cluster_master:!{{ _patroni_update_skip_hostgroup }}"
  become: true
  any_errors_fatal: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.patroni.update
  pre_tasks:
    - name: Stat Patroni configuration file
      ansible.builtin.stat:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_stat

    - name: Slurp Patroni configuration
      ansible.builtin.slurp:
        path: "{{ _patroni_cluster_config_file }}"
      register: _patroni_config_query

    - name: Set Patroni configuration facts
      ansible.builtin.set_fact:
        _api_username: "{{ _config_data.restapi.authentication.username }}"
        _api_password: "{{ _config_data.restapi.authentication.password }}"
      vars:
        _config_data: "{{ _patroni_config_query.content | ansible.builtin.b64decode | from_yaml }}"

    - name: Verify primary liveness
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/liveness"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

    - name: Verify primary status
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/primary"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

    - name: Check cluster state
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/cluster"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 10
      register: _cluster_state

    - name: Set cluster state facts
      ansible.builtin.set_fact:
        _cluster_leader: "{{ _cluster_state.json.members | selectattr('role', 'equalto', 'leader') | map(attribute='name') | first }}"

    - name: Debug cluster state
      ansible.builtin.debug:
        var: _cluster_state.json

    - name: Debug cluster leader
      ansible.builtin.debug:
        var: _cluster_leader

    - name: Verify replicas are healthy
      ansible.builtin.assert:
        that:
          - _cluster_state.json.members | selectattr('role', 'equalto', 'replica') | list | length > 0
          - _cluster_state.json.members | selectattr('role', 'equalto', 'replica') | selectattr('state', 'in', ['running', 'streaming']) | list | length > 0
        fail_msg: "No healthy replicas found for switchover"
        success_msg: "Healthy replicas detected, proceeding with switchover"

    - name: Perform cluster switchover
      block:
        - name: Switchover cluster role
          ansible.builtin.uri:
            url: "http://localhost:{{ _patroni_cluster_port_restapi }}/switchover"
            user: "{{ _api_username }}"
            password: "{{ _api_password }}"
            method: POST
            body_format: json
            body:
              leader: "{{ _cluster_leader }}"
            status_code: 200
            timeout: "{{ _patroni_cluster_switchover_timeout }}"
          delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

        - name: Verify replica status
          ansible.builtin.uri:
            url: "http://localhost:{{ _patroni_cluster_port_restapi }}/replica?lag={{ _maxlag }}"
            user: "{{ _api_username }}"
            password: "{{ _api_password }}"
            method: GET
            status_code: 200
            timeout: 3
          vars:
            _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
            _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
          retries: 30
          register: patroni_status
          until: patroni_status is succeeded
          delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

        - name: Stop Patroni service
          ansible.builtin.service:
            name: patroni
            state: stopped

      rescue:
        - name: Get cluster information on switchover failure
          ansible.builtin.uri:
            url: "http://localhost:{{ _patroni_cluster_port_restapi }}/cluster"
            user: "{{ _api_username }}"
            password: "{{ _api_password }}"
            method: GET
            status_code: 200
            timeout: 10
          register: _cluster_state_failure
          ignore_errors: true

        - name: Get Patroni configuration on failure
          ansible.builtin.uri:
            url: "http://localhost:{{ _patroni_cluster_port_restapi }}/config"
            user: "{{ _api_username }}"
            password: "{{ _api_password }}"
            method: GET
            status_code: 200
            timeout: 10
          register: _patroni_config_failure
          ignore_errors: true

        - name: Debug cluster state
          ansible.builtin.debug:
            var: _cluster_state_failure.json

        - name: Debug cluster config
          ansible.builtin.debug:
            var: _patroni_config_failure.json

        - name: Fail playbook on switchover error
          ansible.builtin.fail:
            msg: "Cluster master switchover failed. Check debug output for details."

  post_tasks:
    - name: Reboot node
      ansible.builtin.reboot:
        reboot_timeout: "{{ patroni_reboot_timeout | default(300) }}"

    - name: Verify replica status
      ansible.builtin.uri:
        url: "http://localhost:{{ _patroni_cluster_port_restapi }}/replica?lag={{ _maxlag }}"
        user: "{{ _api_username }}"
        password: "{{ _api_password }}"
        method: GET
        status_code: 200
        timeout: 3
      vars:
        _conf_lag: "[{{ _patroni_cluster_maxlag_failover | int }}, {{ _patroni_cluster_maxlag_sync | int }}]"
        _maxlag: "{{ [_conf_lag] | map('select', 'gt', 0) | min | first }}"
      retries: 30
      register: patroni_status
      until: patroni_status is succeeded
      delay: "{{ ((_patroni_cluster_start_timeout | int) / 10) | round(0, 'ceil') | int }}"

- name: Update Consul cluster
  ansible.builtin.import_playbook: nephelaiio.consul.update
  vars:
    consul_group_name: "{{ patroni_consul_group | default('patroni_consul') }}"
    consul_update_skip_group: "{{ _patroni_update_skip_hostgroup }}"
